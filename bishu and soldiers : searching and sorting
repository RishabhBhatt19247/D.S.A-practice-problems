https://www.hackerearth.com/problem/algorithm/bishu-and-soldiers-227/

//optimised version

#include <bits/stdc++.h>
using namespace std;
int main() 
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    int n,q;
    cin >> n;
    vector<int> arr(n);

    for (int i = 0; i < n;i++)
    {
        cin >> arr[i];

    }
 
 
    sort( arr.begin() , arr.end());
 
    vector<int> sum(n);
    sum[0] = arr[0];

    for (int i = 1; i < n;i++)
    {
      sum[i] = sum[i - 1] + arr[i];

    }

    cin>>q;

    while(q--) 
    {
        int x;
        cin >> x;
        int i = upper_bound(arr.begin(),arr.end(), x) - arr.begin();
        if(i == n or arr[i] > x)
        {
            i--;
        }
      
        cout <<i+1<<" "<< sum[i]<< "\n";
    }
    return 0;
}





//less optimised version


#include<bits/stdc++.h>
using namespace std;
int bnsearch(int arr[],int ele,int size)
{
    int start=0,mid;
    int end = size - 1;
    while(start<=end)
    {
        mid = (start + end) / 2;
        if(arr[mid]>=ele && arr[mid-1]<ele)
        {
            return mid;
        }
        else if(arr[mid]>ele)
        {
            end = mid-1;
        }
        else if(arr[mid]<ele)
        {
            start = mid+1;
        }
    }
    return mid;
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int n,q;
    cin>>n;
    
    int arr[n],ans[n];
    int sum = 0;
    for (int i = 0; i < n;i++)
    {
        cin >> arr[i];
    }
    sort(arr, arr + n);
    for (int i = 0; i < n;i++)
    {
        sum = sum + arr[i];
        ans[i] = sum;
    }
    cin >> q;
    for (int i = 0; i < q;i++)
    {
        int bispow;
        cin >>bispow;
        int ind = bnsearch(arr,bispow,n);
        cout << ind+1<<" " << ans[ind]<<"\n";
    }
    return 0;
}


